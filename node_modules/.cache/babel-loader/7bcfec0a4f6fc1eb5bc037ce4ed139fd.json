{"ast":null,"code":"var _jsxFileName = \"/Users/pranavchachra/Desktop/sort-visualizer-master/src/components/molecules/SortInfo/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst SortInfo = ({\n  title,\n  description,\n  worstCase,\n  avgCase,\n  bestCase,\n  space\n}) => {\n  return React.createElement(\"div\", {\n    className: \"SortInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, title ? title : 'Select Algorithm'), React.createElement(\"div\", {\n    className: \"SortInfo__Body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"SortInfo__Article\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, description ? description : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"You must select an algorithm before you can visualize it's execution on an array of numbers.\")), React.createElement(\"aside\", {\n    className: \"SortInfo__Aside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Performance\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Worst-case time complexity\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, worstCase))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Average time complexity\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, avgCase))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Best-case time complexity\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, bestCase))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Worst-case space complexity\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, space))))))));\n};\n\nSortInfo.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.object,\n  worstCase: PropTypes.object,\n  avgCase: PropTypes.object,\n  bestCase: PropTypes.object,\n  space: PropTypes.object\n};\nexport default SortInfo;","map":{"version":3,"sources":["/Users/pranavchachra/Desktop/sort-visualizer-master/src/components/molecules/SortInfo/index.js"],"names":["React","PropTypes","SortInfo","title","description","worstCase","avgCase","bestCase","space","propTypes","string","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,KADgB;AAEhBC,EAAAA,WAFgB;AAGhBC,EAAAA,SAHgB;AAIhBC,EAAAA,OAJgB;AAKhBC,EAAAA,QALgB;AAMhBC,EAAAA;AANgB,CAAD,KAOX;AACJ,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,GAAGA,KAAH,GAAW,kBAArB,CAFF,EAIE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WAAW,GACVA,WADU,GAGV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAJJ,CADF,EAYE;AAAO,IAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,SAAP,CADF,CAFF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,OAAP,CADF,CAFF,CARF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,QAAP,CADF,CAFF,CAfF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,KAAP,CADF,CAFF,CAtBF,CADF,CAFF,CAZF,CAJF,CADF;AAsDD,CA9DD;;AAgEAN,QAAQ,CAACO,SAAT,GAAqB;AACnBN,EAAAA,KAAK,EAAEF,SAAS,CAACS,MADE;AAEnBN,EAAAA,WAAW,EAAEH,SAAS,CAACU,MAFJ;AAGnBN,EAAAA,SAAS,EAAEJ,SAAS,CAACU,MAHF;AAInBL,EAAAA,OAAO,EAAEL,SAAS,CAACU,MAJA;AAKnBJ,EAAAA,QAAQ,EAAEN,SAAS,CAACU,MALD;AAMnBH,EAAAA,KAAK,EAAEP,SAAS,CAACU;AANE,CAArB;AASA,eAAeT,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst SortInfo = ({\n  title,\n  description,\n  worstCase,\n  avgCase,\n  bestCase,\n  space\n}) => {\n  return (\n    <div className=\"SortInfo\">\n      <hr />\n      <h1>{title ? title : 'Select Algorithm'}</h1>\n\n      <div className=\"SortInfo__Body\">\n        <article className=\"SortInfo__Article\">\n          {description ? (\n            description\n          ) : (\n            <p>\n              You must select an algorithm before you can visualize it's\n              execution on an array of numbers.\n            </p>\n          )}\n        </article>\n\n        <aside className=\"SortInfo__Aside\">\n          <h3>Performance</h3>\n          <table>\n            <tbody>\n              <tr>\n                <td>Worst-case time complexity</td>\n                <td>\n                  <code>{worstCase}</code>\n                </td>\n              </tr>\n\n              <tr>\n                <td>Average time complexity</td>\n                <td>\n                  <code>{avgCase}</code>\n                </td>\n              </tr>\n\n              <tr>\n                <td>Best-case time complexity</td>\n                <td>\n                  <code>{bestCase}</code>\n                </td>\n              </tr>\n\n              <tr>\n                <td>Worst-case space complexity</td>\n                <td>\n                  <code>{space}</code>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </aside>\n      </div>\n    </div>\n  );\n};\n\nSortInfo.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.object,\n  worstCase: PropTypes.object,\n  avgCase: PropTypes.object,\n  bestCase: PropTypes.object,\n  space: PropTypes.object\n};\n\nexport default SortInfo;\n"]},"metadata":{},"sourceType":"module"}