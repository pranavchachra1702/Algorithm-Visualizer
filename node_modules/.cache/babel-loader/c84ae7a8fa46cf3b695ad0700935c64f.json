{"ast":null,"code":"var _jsxFileName = \"/Users/pranavchachra/Desktop/sort-visualizer-master/src/components/AppControls/index.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport Button from '../../atoms/Button';\nimport Switch from '../../atoms/Switch';\nimport Menu from '../../molecules/Menu';\n\nconst AppControls = ({\n  algorithm,\n  onAlgorithmChange,\n  onGenerateRandomArray,\n  arraySize,\n  onArraySizeChange,\n  onToggleDarkMode,\n  darkMode\n}) => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    placeholder: \"Sort Algorithm\",\n    items: ['Bubble Sort', 'Selection Sort', 'Insertion Sort', 'Merge Sort', 'Quick Sort', 'Quick Sort 3', 'Heap Sort', 'Shell Sort'],\n    selected: algorithm,\n    onSelect: onAlgorithmChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"AppControls__Size\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Size\"), React.createElement(Menu, {\n    placeholder: \"Array Size\",\n    items: ['5', '10', '25', '50', '75', '100'],\n    selected: String(arraySize),\n    onSelect: onArraySizeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: onGenerateRandomArray,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Randomize\"), React.createElement(Switch, {\n    label: \"Dark Mode\",\n    onSwitch: onToggleDarkMode,\n    checked: darkMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nAppControls.propTypes = {\n  algorithm: PropTypes.string,\n  onAlgorithmChange: PropTypes.func.isRequired,\n  onGenerateRandomArray: PropTypes.func.isRequired,\n  arraySize: PropTypes.number,\n  onArraySizeChange: PropTypes.func.isRequired,\n  onToggleDarkMode: PropTypes.func.isRequired,\n  darkMode: PropTypes.bool\n};\nexport default AppControls;","map":{"version":3,"sources":["/Users/pranavchachra/Desktop/sort-visualizer-master/src/components/AppControls/index.js"],"names":["React","Fragment","PropTypes","Button","Switch","Menu","AppControls","algorithm","onAlgorithmChange","onGenerateRandomArray","arraySize","onArraySizeChange","onToggleDarkMode","darkMode","String","propTypes","string","func","isRequired","number","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,SADmB;AAEnBC,EAAAA,iBAFmB;AAGnBC,EAAAA,qBAHmB;AAInBC,EAAAA,SAJmB;AAKnBC,EAAAA,iBALmB;AAMnBC,EAAAA,gBANmB;AAOnBC,EAAAA;AAPmB,CAAD,KAQd;AACJ,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,WAAW,EAAC,gBADd;AAEE,IAAA,KAAK,EAAE,CACL,aADK,EAEL,gBAFK,EAGL,gBAHK,EAIL,YAJK,EAKL,YALK,EAML,cANK,EAOL,WAPK,EAQL,YARK,CAFT;AAYE,IAAA,QAAQ,EAAEN,SAZZ;AAaE,IAAA,QAAQ,EAAEC,iBAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAiBE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD;AACE,IAAA,WAAW,EAAC,YADd;AAEE,IAAA,KAAK,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,KAA9B,CAFT;AAGE,IAAA,QAAQ,EAAEM,MAAM,CAACJ,SAAD,CAHlB;AAIE,IAAA,QAAQ,EAAEC,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjBF,EA2BE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA3BF,EA6BE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,QAAQ,EAAEG,gBAFZ;AAGE,IAAA,OAAO,EAAEC,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,CADF;AAqCD,CA9CD;;AAgDAP,WAAW,CAACS,SAAZ,GAAwB;AACtBR,EAAAA,SAAS,EAAEL,SAAS,CAACc,MADC;AAEtBR,EAAAA,iBAAiB,EAAEN,SAAS,CAACe,IAAV,CAAeC,UAFZ;AAGtBT,EAAAA,qBAAqB,EAAEP,SAAS,CAACe,IAAV,CAAeC,UAHhB;AAItBR,EAAAA,SAAS,EAAER,SAAS,CAACiB,MAJC;AAKtBR,EAAAA,iBAAiB,EAAET,SAAS,CAACe,IAAV,CAAeC,UALZ;AAMtBN,EAAAA,gBAAgB,EAAEV,SAAS,CAACe,IAAV,CAAeC,UANX;AAOtBL,EAAAA,QAAQ,EAAEX,SAAS,CAACkB;AAPE,CAAxB;AAUA,eAAed,WAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nimport Button from '../../atoms/Button';\nimport Switch from '../../atoms/Switch';\nimport Menu from '../../molecules/Menu';\n\nconst AppControls = ({\n  algorithm,\n  onAlgorithmChange,\n  onGenerateRandomArray,\n  arraySize,\n  onArraySizeChange,\n  onToggleDarkMode,\n  darkMode\n}) => {\n  return (\n    <Fragment>\n      <Menu\n        placeholder=\"Sort Algorithm\"\n        items={[\n          'Bubble Sort',\n          'Selection Sort',\n          'Insertion Sort',\n          'Merge Sort',\n          'Quick Sort',\n          'Quick Sort 3',\n          'Heap Sort',\n          'Shell Sort'\n        ]}\n        selected={algorithm}\n        onSelect={onAlgorithmChange}\n      />\n\n      <div className=\"AppControls__Size\">\n        <span>Size</span>\n        <Menu\n          placeholder=\"Array Size\"\n          items={['5', '10', '25', '50', '75', '100']}\n          selected={String(arraySize)}\n          onSelect={onArraySizeChange}\n        />\n      </div>\n\n      <Button onClick={onGenerateRandomArray}>Randomize</Button>\n\n      <Switch\n        label=\"Dark Mode\"\n        onSwitch={onToggleDarkMode}\n        checked={darkMode}\n      />\n    </Fragment>\n  );\n};\n\nAppControls.propTypes = {\n  algorithm: PropTypes.string,\n  onAlgorithmChange: PropTypes.func.isRequired,\n  onGenerateRandomArray: PropTypes.func.isRequired,\n  arraySize: PropTypes.number,\n  onArraySizeChange: PropTypes.func.isRequired,\n  onToggleDarkMode: PropTypes.func.isRequired,\n  darkMode: PropTypes.bool\n};\n\nexport default AppControls;\n"]},"metadata":{},"sourceType":"module"}